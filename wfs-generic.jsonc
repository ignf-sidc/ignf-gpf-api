{
    "workflow": {
        "steps": {
            // Étape n°1 : Mise en base de vecteurs livrés
            "mise-en-base": {
                "actions": [
                    {
                        // On crée une exécution de traitement
                        "type": "processing-execution",
                        "body_parameters": {
                            // On récupère l'id du traitement nommé "Intégration de données vecteur livrées en base"
                            "processing": "{store_entity.processing.infos._id [INFOS(name=Intégration de données vecteur livrées en base)]}",
                            "inputs": {
                                "upload": [
                                    // On récupère l'id de la Livraison associée grâce à son nom
                                    "{store_entity.upload.infos._id [INFOS(name=EXAMPLE_DATASET_VECTOR)]}"
                                ]
                            },
                            "output": {
                                "stored_data": {
                                    // On crée une nouvelle Donnée Stockée nommée "UserLastName_Base_intermédiaire"
                                    "name": "__Base_intermediaire2",
                                    "storage_type": "POSTGRESQL"
                                }
                            },
                            "parameters": {}
                        },
                        // Liste des commentaires ajoutés à la Donnée Stockée en sortie de l'exécution du traitement
                        "comments": [],
                        // Liste des tags ajoutés à la Donnée Stockée en sortie de l'exécution du traitement
                        "tags": {}
                    }
                ],
                "parents": []
            },
            // Étape n°2 : création de la pyramide vecteur
            "création-pyramide": {
                "actions": [
                    {
                        // On crée une exécution de traitement
                        "type": "processing-execution",
                        "body_parameters": {
                            // On récupère l'id du traitement nommé "Création d'une pyramide vecteur"
                            "processing": "{store_entity.processing.infos._id [INFOS(name=Création d'une pyramide vecteur)]}",
                            "inputs": {
                                "stored_data": [
                                    // On récupère l'id de la Donnée Stockée créée à l'étape précédente grâce à son nom, son type et l'un de ses tags
                                    "{store_entity.stored_data.infos._id [INFOS(name={user.last_name}__Base_intermédiaire, type=VECTOR-DB) TAGS(tuto=oui)]}"
                                ]
                            },
                            "output": {
                                "stored_data": {
                                    // On crée une nouvelle Donnée Stockée nommée "UserLastName__Pyramide_vecteur"
                                    "name": "{user.last_name}__Pyramide_vecteur"
                                }
                            },
                            "parameters": {
                                // Tile Matrix Set à utiliser
                                "tms": "PM",
                                // Niveau du bas
                                "bottom_level": "18",
                                // Niveau du haut
                                "top_level": "5",
                                // Tables à utiliser, sur quels niveaux et avec quels attributs
                                "composition": [
                                    {
                                        "table": "canton",
                                        "bottom_level": "18",
                                        "top_level": "5",
                                        "attributes": "id,insee_dep,insee_reg,insee_can"
                                    }
                                ],
                                // BBOX : on veut conserver toute l'emprise, donc on laisse vide
                                //"bbox": [], // A COMPLETER
                                // Options de généralisation tippecanoe (par défaut: "-al -ap")
                                "tippecanoe_options": "-S10"
                            }
                        },
                        // Liste des commentaires ajoutés à la Donnée Stockée en sortie de l'exécution du traitement
                        "comments": [
                            "Tutoriel de mise en place d'une pyramide vecteur : création pyramide vecteur à publier"
                        ],
                        // Liste des tags ajoutés à la Donnée Stockée en sortie de l'exécution du traitement
                        "tags": {
                            "tuto": "oui",
                            "temp": "non"
                        }
                    }
                ],
                "parents": [
                    "mise-en-base"
                ]
            },
            // Étape n°3 : configuration d'un flux WFS
            "configuration-wfs": {
                "actions": [
                    {
                        "type": "configuration",
                        "body_parameters": {
                            "type": "WMS-VECTOR",
                            "name": "Flux_vecteur",
                            "layer_name": "flux_vecteur",
                            "type_infos": {
                                "title": "Couche Canton du tutoriel",
                                "abstract": "Exemple de flux à visualiser",
                                "used_data": [
                                    // C'est un flux simple : on n'utilise qu'une seule donnée du niveau 5 au niveau 18
                                    {
                                        "relations": [
                                            {
                                                "name": "site",
                                                "style": "bf4fa4ed-1cf0-4cea-9e98-88fa3e6e8dce"
                                            }
                                        ],
                                        // On récupère l'id de la Donnée Stockée créée à l'étape précédente grâce à son nom, son type et l'un de ses tags
                                        "stored_data": "{store_entity.stored_data.infos._id [INFOS(name=__Base_intermediaire2)]}"
                                    }
                                ]
                            }
                        },
                        // Liste des commentaires ajoutés à la Configuration
                        "comments": []
                        // Liste des tags ajoutés à la Configuration
                    }
                ]
            },
            // Étape n°4 : publication du flux WFS millésimé
            "publication-wfs": {
                "actions": [
                    {
                        "type": "offering",
                        "url_parameters": {
                            // On récupère l'id de la Configuration créée à l'étape précédente grâce à son nom et l'un de ses tags
                            "configuration": "{store_entity.configuration.infos._id [INFOS(name=Flux_vecteur)]}"
                        },
                        "body_parameters": {
                            "visibility": "PRIVATE",
                            // Endpoint de type WMTS-TMS (id trouvé en récupérant les informations de l'entrepôt)
                            "endpoint": "41796939-b598-4c45-92ff-a6aae581e56e"
                        }
                    }
                ]
            }
        }
    }
}
