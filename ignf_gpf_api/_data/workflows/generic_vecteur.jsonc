{
    "workflow": {
        "steps": {
            // Étape n°1 : Mise en base de vecteurs livrés
            "mise-en-base": {
                "actions": [
                    {
                        // On crée une exécution de traitement
                        "type": "processing-execution",
                        "body_parameters": {
                            // On récupère l'id du traitement nommé "Intégration de données vecteur livrées en base"
                            "processing": "{store_entity.processing.infos._id [INFOS(name=Intégration de données vecteur livrées en base)]}",
                            "inputs": {
                                "upload": [
                                    // On récupère l'id de la Livraison associée grâce à son nom
                                    "{store_entity.upload.infos._id [INFOS(name=EXAMPLE_DATASET_VECTOR)]}"
                                ]
                            },
                            "output": {
                                "stored_data": {
                                    // On crée une nouvelle Donnée Stockée nommée "UserLastName__Base_intermédiaire"
                                    "name": "{user.last_name}__Base_intermédiaire"
                                }
                            },
                            "parameters": {}
                        },
                        // Liste des commentaires ajoutés à la Donnée Stockée en sortie de l'exécution du traitement
                        "comments": [
                            "Tutoriel vecteur : création base intermédiaire"
                        ],
                        // Liste des tags ajoutés à la Donnée Stockée en sortie de l'exécution du traitement
                        "tags": {
                            "tuto": "oui",
                            "tuto_name": "vecteur"
                        }
                    }
                ],
                "parents": []
            },
            // Étape n°2 : configuration d'un flux WFS sur la BDD
            "configuration-wfs-bdd": {
                "actions": [
                    {
                        "type": "configuration",
                        "body_parameters": {
                            "type": "WFS",
                            "name": "{user.last_name}__vecteur_wfs_bdd",
                            "layer_name": "{user.last_name}__vecteur_wfs_bdd",
                            "type_infos": {
                                "used_data": [
                                    {
                                        "relations": [
                                            {
                                                "native_name": "canton",
                                                "public_name": "canton",
                                                "title": "{user.last_name} -- vecteur -- Couche Canton du tutoriel - WFS - BDD",
                                                "keywords": ["Tutoriel", "Vecteur", "bdd"],
                                                "abstract": "Cantons autour de Paris"
                        
                                            }
                                        ],
                                        // On récupère l'id de la Donnée Stockée créée à l'étape précédente grâce à son nom
                                        "stored_data": "{store_entity.stored_data.infos._id [INFOS(name={user.last_name}__Base_intermédiaire)]}"
                                    }
                                ]
                            }
                        },
                        // Liste des commentaires ajoutés à la Configuration
                        "comments": [
                            "Tutoriel vecteur : configuration du flux wfs sur la BDD"
                        ],
                        // Liste des tags ajoutés à la Configuration
                        "tags": {
                            "tuto": "oui",
                            "tuto_name": "vecteur"
                        }
                    }
                ],
                "parents": [
                    "mise-en-base"
                ]
            },
            // Étape n°3 : publication du flux WFS sur la BDD
            "publication-wfs-bdd": {
                "actions": [
                    {
                        "type": "offering",
                        "url_parameters": {
                            // On récupère l'id de la Configuration créée à l'étape précédente grâce à son nom et l'un de ses tags
                            "configuration": "{store_entity.configuration.infos._id [INFOS(name={user.last_name}__vecteur_wfs_bdd)]}"
                        },
                        "body_parameters": {
                            // Endpoint de type WFS
                            "endpoint": "{store_entity.endpoint.infos._id [INFOS(type=WFS)]}",
                            "visibility": "PRIVATE",
                            "open": true
                        }
                    }
                ],
                "parents": [
                    "configuration-wfs-bdd"
                ]
            },
            // Étape n°2 : configuration d'un flux WMS sur la BDD
            "configuration-wms-bdd": {
                "actions": [
                    {
                        "type": "configuration",
                        "body_parameters": {
                            "type": "WMS-VECTOR",
                            "name": "{user.last_name}__vecteur_wms_bdd",
                            "layer_name": "{user.last_name}__vecteur_wms_bdd",
                            "type_infos": {
                                "title": "{user.last_name} -- vecteur -- Couche Canton du tutoriel - WMS - BDD",
                                "abstract": "Exemple de flux à visualiser",
                                "keywords": ["Tutoriel", "Vecteur", "bdd"],
                                "used_data": [
                                    {
                                        "relations": [
                                            {
                                                "name": "canton",
                                                // récupération du fichier de style correspondant à la donnée
                                                "style": "{store_entity.static.infos._id [INFOS(name=style_canton)]}"
                                            }
                                        ],
                                        // On récupère l'id de la Donnée Stockée créée à l'étape précédente grâce à son nom, son type et l'un de ses tags
                                        "stored_data": "{store_entity.stored_data.infos._id [INFOS(name={user.last_name}__Base_intermédiaire)]}"
                                    }
                                ]
                            }
                        },
                        // Liste des commentaires ajoutés à la Configuration
                        "comments": [
                            "Tutoriel vecteur : configuration du flux wms sur la BDD"
                        ],
                        // Liste des tags ajoutés à la Configuration
                        "tags": {
                            "tuto": "oui",
                            "tuto_name": "vecteur"
                        }
                    }
                ],
                "parents": [
                    "mise-en-base"
                ]
            },
            // Étape n°3 : publication du flux WMS
            "publication-wms-bdd": {
                "actions": [
                    {
                        "type": "offering",
                        "url_parameters": {
                            // On récupère l'id de la Configuration créée à l'étape précédente grâce à son nom et l'un de ses tags
                            "configuration": "{store_entity.configuration.infos._id [INFOS(name={user.last_name}__vecteur_wms_bdd)]}"
                        },
                        "body_parameters": {
                            // Endpoint de type WMS
                            "endpoint": "{store_entity.endpoint.infos._id [INFOS(type=WMS-VECTOR)]}",
                            "visibility": "PRIVATE",
                            "open": true
                        }
                    }
                ],
                "parents": [
                    "configuration-wms-bdd"
                ]
            },
            // Étape n°2 : création de la pyramide vecteur
            "création-pyramide": {
                "actions": [
                    {
                        // On crée une exécution de traitement
                        "type": "processing-execution",
                        "body_parameters": {
                            // On récupère l'id du traitement nommé "Calcul de pyramide vecteur"
                            "processing": "{store_entity.processing.infos._id [INFOS(name=Calcul de pyramide vecteur)]}",
                            "inputs": {
                                "stored_data": [
                                    // On récupère l'id de la Donnée Stockée créée à l'étape précédente grâce à son nom, son type et l'un de ses tags
                                    "{store_entity.stored_data.infos._id [INFOS(name={user.last_name}__Base_intermédiaire, type=VECTOR-DB) TAGS(tuto=oui)]}"
                                ]
                            },
                            "output": {
                                "stored_data": {
                                    // On crée une nouvelle Donnée Stockée nommée "UserLastName__Pyramide_vecteur"
                                    "name": "{user.last_name}__Pyramide_vecteur"
                                }
                            },
                            "parameters": {
                                // Tables à utiliser, sur quels niveaux et avec quels attributs
                                "bottom_level": "9",
                                "top_level": "0",
                                "composition": [
                                    {
                                        "table": "canton",
                                        "bottom_level": "9",
                                        "top_level": "0",
                                        "attributes": ["id","insee_dep","insee_reg","insee_can", "wkb_geometry"]
                                    }
                                ]
                            }
                        },
                        // Liste des commentaires ajoutés à la Donnée Stockée en sortie de l'exécution du traitement
                        "comments": [
                            "Tutoriel vecteur : création pyramide vecteur à publier"
                        ],
                        // Liste des tags ajoutés à la Donnée Stockée en sortie de l'exécution du traitement
                        "tags": {
                            "tuto": "oui",
                            "tuto_name": "vecteur"
                        }
                    }
                ],
                "parents": [
                    "mise-en-base"
                ]
            },
            // Étape n°3 : configuration d'un flux TMS sur la pyramide
            "configuration-tms-py": {
                "actions": [
                    {
                        "type": "configuration",
                        "body_parameters": {
                            "type": "WMTS-TMS",
                            "name": "{user.last_name}__vecteur_tms_py",
                            "layer_name": "{user.last_name}__vecteur_tms_py",
                            "metadata": [
                                {
                                    "format": "application/xml",
                                    "url": "https://geoservices.ign.fr/sites/default/files/2023-01/IGNF_BDTOPOr_3-3.xml",
                                    "type": "ISO19115:2003"
                                }
                            ],
                            "type_infos": {
                                "title": "{user.last_name} -- vecteur -- Couche Canton du tutoriel - TMS - pyramide",
                                "abstract": "Exemple de flux à visualiser",
                                "keywords": ["Tutoriel", "Vecteur", "Pyramide"],
                                "used_data": [
                                    // C'est un flux simple : on n'utilise qu'une seule donnée du niveau 0 au niveau 9
                                    {
                                        // On récupère l'id de la Donnée Stockée créée à l'étape précédente grâce à son nom, son type et l'un de ses tags
                                        "stored_data": "{store_entity.stored_data.infos._id [INFOS(name={user.last_name}__Pyramide_vecteur, type=ROK4-PYRAMID-VECTOR), TAGS(tuto=oui)]}",
                                        "bottom_level": "9",
                                        "top_level": "0"
                                    }
                                ]
                            }
                        },
                        // Liste des commentaires ajoutés à la Configuration
                        "comments": [
                            "Tutoriel vecteur : configuration de la pyramide"
                        ],
                        // Liste des tags ajoutés à la Configuration
                        "tags": {
                            "tuto": "oui",
                            "tuto_name": "vecteur"
                        }
                    }
                ],
                "parents": [
                    "création-pyramide"
                ]
            },
            // Étape n°4 : publication du flux TMS sur la pyramide
            "publication-tms-py": {
                "actions": [
                    {
                        "type": "offering",
                        "url_parameters": {
                            // On récupère l'id de la Configuration créée à l'étape précédente grâce à son nom et l'un de ses tags
                            "configuration": "{store_entity.configuration.infos._id [INFOS(name={user.last_name}__vecteur_tms_py), TAGS(tuto=oui)]}"
                        },
                        "body_parameters": {
                            // Endpoint de type WMTS-TMS (id trouvé en récupérant les informations de l'entrepôt)
                            "endpoint": "{store_entity.endpoint.infos._id [INFOS(type=WMTS-TMS)]}",
                            "visibility": "PRIVATE",
                            "open": true
                        }
                    }
                ],
                "parents": [
                    "configuration-tms-py"
                ]
            }
        }
    }
}
